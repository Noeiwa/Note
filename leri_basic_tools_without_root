#! /bin/bash
set -e
#-----------------------------------------------------------------------------
# This script, as part of Leri Analytics, will download packages, configure, 
# build and install GCC, Make, Cmake on Unix-like systems. Customize the 
# variables (GCC_VERSION, MAKE_VERSION, etc.) before running.
# Copyright@2017, Leri Analytics
# Email: nyaam.ch@gmail.com
#-----------------------------------------------------------------------------

# Path where to install without root
LOCAL_PATH=/home/username/local

# Customize the versions
PARALLEL_MAKE=-j16
GCC_VERSION=gcc-6.3.0
MPFR_VERSION=mpfr-3.1.5
GMP_VERSION=gmp-6.1.2
MPC_VERSION=mpc-1.0.3
MAKE_VERSION=make-4.2
CMAKE_VERSION=cmake-3.10.0-rc1

# Creat a directory
if [ ! -f leri-gnu ]; then
  mkdir -p leri-gnu
else
  rm -rf leri-gnu
fi
cd leri-gnu/


# Download packages, maybe you already have the packages, please put them in the directory <leri-gnu>
# export http_proxy=$HTTP_PROXY https_proxy=$HTTP_PROXY ftp_proxy=$HTTP_PROXY
# wget -nc https://ftp.gnu.org/gnu/gcc/$GCC_VERSION/$GCC_VERSION.tar.gz
# wget -nc https://ftp.gnu.org/gnu/gmp/$GMP_VERSION.tar.xz
# wget -nc https://ftp.gnu.org/gnu/mpfr/$MPFR_VERSION.tar.xz
# wget -nc https://ftp.gnu.org/gnu/mpc/$MPC_VERSION.tar.gz

# Extract Packages
echo "Extracting tar files ..."
for f in *.tar*; do tar xfk $f; done

# Step 1. Install GMP
echo "Step 1. Installing GMP ..."
cd $GMP_VERSION
mkdir build && cd build
../configure --prefix=$LOCAL_PATH/$GMP_VERSION --enable-cxx
nice -n 19 time make $PARALLEL_MAKE
make install && make check
cd ..

# Step 2. Install MPFR
echo "Step 2. Installing MPFR ..."
cd $MPFR_VERSION
mkdir build && cd build
../configure --prefix=$LOCAL_PATH/$MPFR_VERSION --with-gmp=$LOCAL_PATH/$GMP_VERSION 
nice -n 19 time make $PARALLEL_MAKE
make install && make check
cd ..

# Step 3. Install MPC
echo "Step 3. Installing MPC ..."
cd $MPC_VERSION
mkdir build && cd build
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib \
../configure --prefix=$LOCAL_PATH/$MPC_VERSION \
--with-gmp=$LOCAL_PATH/$GMP_VERSION \
--with-mpfr=$LOCAL_PATH/$MPFR_VERSION
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib \
nice -n 19 time make $PARALLEL_MAKE
make install && make check
cd ..

# Step 4. Install GCC
echo "Step 4. Installing GCC ..."
cd $GCC_VERSION
mkdir -p build && cd build
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib \
../configure --prefix=$LOCAL_PATH/$GCC_VERSION \
--with-gmp=$LOCAL_PATH/$GMP_VERSION \
--with-mpfr=$LOCAL_PATH/$MPFR_VERSION \
--with-mpc=$LOCAL_PATH/$MPC_VERSION \
--disable-multilib \
--enable-languages=c,c++ \
--enable-libgomp
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib \
nice -n 19 time make $PARALLEL_MAKE
make install && make check
cd ..

# Step 5. Install Make
echo "Step 4. Installing Make ..."
cd $MAKE_VERSION
mkdir -p build && cd build
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib \
../configure --prefix=$LOCAL_PATH/$MAKE_VERSION
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib \
nice -n 19 time make $PARALLEL_MAKE
make install && make check
cd ..

# Step 6. Install Make
echo "Step 4. Installing Cmake ..."
cd $CMAKE_VERSION
mkdir -p build && cd build
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib64:$LOCAL_PATH/$MAKE_VERSION/lib \
../configure --prefix=$LOCAL_PATH/$CMAKE_VERSION
LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib64:$LOCAL_PATH/$MAKE_VERSION/lib \
nice -n 19 time make $PARALLEL_MAKE
make install && make check
cd ..

# echo $MACHTYPE
#$LOCAL_PATH/$GCC_VERSION/lib64 is correct on x86_64; it may need to be replaced with $LOCAL_PATH/$GCC_VERSION/lib on other platforms.
# Or paste the following lines to ~/.bashrc in Unix-like systems
export LD_LIBRARY_PATH=$LOCAL_PATH/$GMP_VERSION/lib:$LOCAL_PATH/$MPFR_VERSION/lib:$LOCAL_PATH/$MPC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib:$LOCAL_PATH/$GCC_VERSION/lib64:$LOCAL_PATH/$MAKE_VERSION/lib:$LOCAL_PATH/$CMAKE_VERSION/lib
export PATH=$LOCAL_PATH/$GCC_VERSION/bin:$PATH
export PATH=$LOCAL_PATH/$MAKE_VERSION/bin:$PATH
export PATH=$LOCAL_PATH/$CMAKE_VERSION/bin:$PATH




